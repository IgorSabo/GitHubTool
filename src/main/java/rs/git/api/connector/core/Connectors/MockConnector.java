package rs.git.api.connector.core.Connectors;

import rs.git.api.connector.wrappers.ApiResponseWrapper;

import java.io.*;

/**
 * Mocked Connect implementation, used during testing
 */
public class MockConnector implements Connect{

    /**
     * Return response only for few urls that will be used during testing
     *
     * @param url - url that connector received
     * @return - ApiResponseWrapper object, containing GitCommand type, status code and response body text
     */
    public ApiResponseWrapper sendRequest(String url)  {
        ApiResponseWrapper wrapper = null;
        String response="";

        if(url.equals("https://api.github.com/search/repositories?q=language:java&per_page=10&sort=created")){
            //Returns a valid json response generated by server for list java -n 10 command

            File testFile = new File("src/test/resources/", "ListResponse.json");
            response = getFileContent(testFile);

        }else if( url.equals("https://api.github.com/repositories/7508411")) {
            //Returns a valid json response generated by server for desc 7508411 command

            File testFile = new File("src/test/resources/", "DescResponse7508411.json");
            response = getFileContent(testFile);

        }else if(url.equals("https://api.github.com/repositories/1663468")){
            //Returns a valid json response generated by server for desc 1663468command

            File testFile = new File("src/test/resources/", "DescResponse1663468.json");
            response = getFileContent(testFile);
        }

        wrapper = new ApiResponseWrapper(null, response, 200);
        return wrapper;
    }


    /**
     * Get content of a file
     *
     * @param f - input file
     * @return - string content of the file
     */
    public String getFileContent(File f){
        StringBuffer sb = new StringBuffer();
        String line;
        try {
            BufferedReader br = new BufferedReader(new FileReader(f));
            while((line=br.readLine()) != null){
                sb.append(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return sb.toString();
    }
}
